═══════════════════════════════════════════════════════════════════════════════
    NOTES DE SÉCURITÉ - AutoCalc OptiDevis v3.0.0
    Vulnérabilités npm Acceptées et Justifications
═══════════════════════════════════════════════════════════════════════════════

Date: 20 Octobre 2025
Version: 3.0.0
Score de Sécurité: 78/100

═══════════════════════════════════════════════════════════════════════════════
✅ SÉCURITÉ IMPLÉMENTÉE
═══════════════════════════════════════════════════════════════════════════════

✓ Content Security Policy (CSP) stricte
✓ Electron Sandbox activé
✓ contextIsolation activé
✓ nodeIntegration désactivé
✓ Authentification bcrypt
✓ Protection XSS (échappement HTML)
✓ Protection Path Traversal
✓ Gestion sécurisée des sessions

═══════════════════════════════════════════════════════════════════════════════
⚠️ VULNÉRABILITÉS NPM ACCEPTÉES (9 vulnérabilités)
═══════════════════════════════════════════════════════════════════════════════

Les vulnérabilités suivantes ont été analysées et ACCEPTÉES pour les raisons
indiquées ci-dessous :

───────────────────────────────────────────────────────────────────────────────
1. XLSX (Prototype Pollution + ReDoS)
───────────────────────────────────────────────────────────────────────────────

Vulnérabilité: HIGH
Package: xlsx@0.18.5
Issues:
  - Prototype Pollution in SheetJS (GHSA-4r6h-8v6p-xvw6)
  - Regular Expression Denial of Service (GHSA-5pgg-2g8v-p4x9)

✅ ACCEPTÉ car:
  1. Pas de fix disponible actuellement
  2. Utilisé uniquement pour export Excel (côté serveur)
  3. Les données sont contrôlées (pas d'input utilisateur externe)
  4. Fonctionnalité critique pour l'application
  5. Risque limité dans un contexte Electron (pas de serveur web public)

Mitigation:
  - Valider toutes les données avant export
  - Ne pas exporter de données non fiables
  - Surveiller les mises à jour de xlsx

───────────────────────────────────────────────────────────────────────────────
2. QUAGGA (Dépendances obsolètes: request, form-data, tough-cookie)
───────────────────────────────────────────────────────────────────────────────

Vulnérabilité: CRITICAL + MODERATE
Package: quagga@0.12.1
Chaîne de dépendances:
  - quagga → get-pixels → request → form-data (CRITICAL)
  - quagga → get-pixels → request → tough-cookie (MODERATE)

Issues:
  - form-data: Unsafe random function (GHSA-fjxv-7rqg-78g4)
  - tough-cookie: Prototype Pollution (GHSA-72xf-g2v4-qvf3)

✅ ACCEPTÉ car:
  1. Quagga est ESSENTIEL pour le scanner de code-barres
  2. Utilisé uniquement en local (pas d'exposition réseau)
  3. Traite uniquement des images locales de la webcam
  4. Aucune alternative moderne compatible disponible
  5. Risque limité : pas de données sensibles dans le flux vidéo
  6. Le package request est deprecated mais fonctionne

Mitigation:
  - Limiter l'usage du scanner aux sessions authentifiées
  - Ne pas stocker les images scannées
  - Surveiller les alternatives à Quagga (QuaggaJS2, etc.)
  - Considérer une migration future vers une lib moderne

───────────────────────────────────────────────────────────────────────────────
3. DOMPURIFY (XSS dans versions < 3.2.4)
───────────────────────────────────────────────────────────────────────────────

Vulnérabilité: MODERATE
Package: dompurify@3.0.x (via jspdf)
Issue: Cross-site Scripting (GHSA-vhxf-7vqr-mrjg)

✅ ACCEPTÉ car:
  1. Utilisé indirectement par jspdf (génération PDF)
  2. Pas d'input utilisateur non contrôlé dans les PDF
  3. Fix nécessite jspdf@3.x (breaking change majeur)
  4. Risque XSS limité dans le contexte PDF local
  5. Migration jspdf 3.x prévue pour v3.1.0

Mitigation:
  - Valider toutes les données avant génération PDF
  - Échapper le HTML dans les templates PDF
  - Planifier migration jspdf 3.x pour prochaine version

═══════════════════════════════════════════════════════════════════════════════
📊 ANALYSE DE RISQUE GLOBALE
═══════════════════════════════════════════════════════════════════════════════

Contexte d'utilisation:
  ✓ Application Electron LOCALE (pas de serveur web public)
  ✓ Environnement contrôlé (installation sur poste client)
  ✓ Pas d'exposition Internet directe
  ✓ Authentification requise pour toutes les fonctionnalités
  ✓ Données stockées localement (LowDB)

Évaluation du risque:
  🟢 Risque FAIBLE en production

  Raisons:
  1. Pas d'attaque réseau possible (app desktop)
  2. Toutes les vulnérabilités sont dans des dépendances indirectes
  3. Aucune vulnérabilité critique dans le code applicatif
  4. CSP + Sandbox + contextIsolation activés
  5. Authentification bcrypt + sessions sécurisées

Priorités futures:
  1. Migrer vers jspdf 3.x (v3.1.0)
  2. Surveiller alternatives à Quagga
  3. Mettre à jour xlsx dès qu'un patch est disponible
  4. Audit de sécurité trimestriel

═══════════════════════════════════════════════════════════════════════════════
✅ MISES À JOUR DE SÉCURITÉ APPLIQUÉES
═══════════════════════════════════════════════════════════════════════════════

✓ nodemailer: 6.10.1 → 7.0.9 (vulnérabilité corrigée)
✓ Content Security Policy implémentée
✓ Sandbox Electron activé
✓ Configuration sécurité Electron complète

═══════════════════════════════════════════════════════════════════════════════
📝 RECOMMANDATIONS POUR LES UTILISATEURS
═══════════════════════════════════════════════════════════════════════════════

1. Installer uniquement depuis des sources officielles
2. Maintenir l'antivirus à jour
3. Ne pas ouvrir de fichiers xlsx/pdf non fiables
4. Utiliser le scanner code-barres uniquement pour des produits légitimes
5. Mettre à jour l'application régulièrement

═══════════════════════════════════════════════════════════════════════════════
🔄 PLAN DE SURVEILLANCE
═══════════════════════════════════════════════════════════════════════════════

Fréquence: Mensuelle
  - npm audit pour nouvelles vulnérabilités
  - Vérifier mises à jour des dépendances
  - Tester les patches de sécurité

Changelog de sécurité:
  v3.0.0 (Oct 2025): CSP + Sandbox + nodemailer 7.0.9
  v3.1.0 (prévu): Migration jspdf 3.x
  v3.2.0 (prévu): Évaluation alternative à Quagga

═══════════════════════════════════════════════════════════════════════════════
📞 SIGNALEMENT DE VULNÉRABILITÉS
═══════════════════════════════════════════════════════════════════════════════

Si vous découvrez une faille de sécurité, merci de la signaler à:
Email: Riisalth@hotmail.fr
Sujet: [SÉCURITÉ] AutoCalc OptiDevis v3.0.0

Divulgation responsable appréciée (délai de 90 jours avant publication publique)

═══════════════════════════════════════════════════════════════════════════════
© 2025 AutoCalc OptiDevis - David VIEY
Dernière mise à jour: 20 Octobre 2025
═══════════════════════════════════════════════════════════════════════════════
